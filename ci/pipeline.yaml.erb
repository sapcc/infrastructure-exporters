isource: &registry
host:       {{docker-registry-quay-host}}
email:      {{docker-registry-email}}
username:   {{docker-registry-quay-robotuser}}
password:   {{docker-registry-quay-token}}

resource_types:
- name: time-version
  type: docker-image
  source:
    repository: hub.global.cloud.sap/concourse/time-version-resource
    tag: v2 

image_resource: &monsoon-pipeline
  image_resource:
    type: docker-image
    source:
      repository: hub.global.cloud.sap/monsoon/monsoon-pipeline
      tag: '1.8.4'

resources:
  - name: infrastructure-exporters.git
    type: git
    source:
      uri:   https://github.com/sapcc/infrastructure-exporters.git
      branch: master 
    
  - name: infrastructure-exporters-ng.version
    type: time-version

jobs:
  - name: build-infrastructure-exporters
    serial: true
    plan:
      - aggregate:
        - get: infrastructure-exporters.git
          trigger: true
        - put: infrastructure-exporters-ng.version
  
      - task: build-infrastructure-exporters
        privileged: true
        config:
          platform: 'linux'
          <<: *monsoon-pipeline
          inputs:
            - name: infrastructure-exporters.git
            - name: infrastructure-exporters-ng.version
          run:
            path: /bin/bash
            dir:  infrastructure-exporters.git
            args:
              - -c
              - |
                set -ex
                export TZ=UTC
                echo "10.46.2.200 hub.global.cloud.sap" >> /etc/hosts
                source /tasks/common.sh
                set -uo pipefail
                IMAGE=hub.global.cloud.sap/monsoon/infrastructure-exporters:$(cat ../infrastructure-exporters-ng.version/version)
                docker login -e="." -u="$QUAY_ROBOTS_USER" -p="$QUAY_TOKEN" hub.global.cloud.sap
                # patch the upstream Dockerfile to add SAP CAs
                cat >>Dockerfile <<-EOF
                RUN apk add --update wget ca-certificates && \
                    wget -O /usr/local/share/ca-certificates/SAP_Global_Root_CA.crt http://aia.pki.co.sap.com/aia/SAP%20Global%20Root%20CA.crt && \
                    wget -O /usr/local/share/ca-certificates/SAP_Global_Sub_CA_02.crt http://aia.pki.co.sap.com/aia/SAP%20Global%20Sub%20CA%2002.crt && \
                    wget -O /usr/local/share/ca-certificates/SAP_Global_Sub_CA_04.crt http://aia.pki.co.sap.com/aia/SAP%20Global%20Sub%20CA%2004.crt && \
                    wget -O /usr/local/share/ca-certificates/SAP_Global_Sub_CA_05.crt http://aia.pki.co.sap.com/aia/SAP%20Global%20Sub%20CA%2005.crt && \
                    wget -O /usr/local/share/ca-certificates/SAPNetCA_G2.crt http://aia.pki.co.sap.com/aia/SAPNetCA_G2.crt && \
                    update-ca-certificates && apk del wget
                EOF
                unset http_proxy all_proxy https_proxy no_proxy
                docker build --build-arg https_proxy=$HTTP_PROXY --build-arg http_proxy=$HTTP_PROXY --build-arg HTTP_PROXY=$HTTP_PROXY --build-arg HTTPS_PROXY=$HTTP_PROXY --build-arg NO_PROXY=$NO_PROXY  --build-arg no_proxy=$NO_PROXY -t $IMAGE .
                docker push $IMAGE
          params:
            QUAY_ROBOTS_USER: {{docker-registry-quay-robotuser}}
            QUAY_TOKEN: {{docker-registry-quay-token}}
            HTTP_PROXY: ""
            HTTPS_PROXY: ""
            NO_PROXY: ""
            http_proxy: ""
            https_proxy: ""
            all_proxy: ""
            no_proxy: ""
            ftp_proxy: ""